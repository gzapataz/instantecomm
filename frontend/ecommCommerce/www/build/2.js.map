{"version":3,"sources":["../../src/pages/services-add/services-add.module.ts","../../src/pages/services-add/services-add.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AAUjD;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QARjC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,sEAAe;aAChB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,sEAAe,CAAC;aAC1C;SACF,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZc;AAC0C;AACD;AACA;AAC9B;AACmD;AAG9G;;;;;GAKG;AAOH;IAME,yBAAmB,OAAsB,EAAS,SAAoB,EAClD,WAA0C,EAC3C,QAAwB,EACvB,SAA0B,EAC1B,cAAsC,EACtC,aAAqC;QALtC,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAClD,gBAAW,GAAX,WAAW,CAA+B;QAC3C,aAAQ,GAAR,QAAQ,CAAgB;QACvB,cAAS,GAAT,SAAS,CAAiB;QAC1B,mBAAc,GAAd,cAAc,CAAwB;QACtC,kBAAa,GAAb,aAAa,CAAwB;QATzD,gBAAW,GAAG,CAAC,CAAC;QAEhB,YAAO,GAAiB,IAAI,4EAAY,EAAE,CAAC;IAQ3C,CAAC;IAED,yCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QAClE,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;IAGD,gCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAGD,8BAAI,GAAJ;QACE,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChE,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CACnD,CAAC;YACC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACnC,KAAK,EAAE,oBAAoB;gBAC3B,QAAQ,EAAE,uCAAuC;gBACjD,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,QAAQ,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC;QAAC,IAAI,EAAC;YACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC;IAEH,CAAC;IA/CU,eAAe;QAJ3B,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;2IAO4B,CAA0C;YACrC,sEAA6B;YACjC,sEAAc;YACZ,0GAAe;YACV,0GAAsB;YACvB,YAAsB;OAX9C,eAAe,CAiD3B;IAAD,CAAC;AAAA;SAjDY,eAAe,gB","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ServicesAddPage } from './services-add';\n\n@NgModule({\n  declarations: [\n    ServicesAddPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ServicesAddPage),\n  ],\n})\nexport class ServicesAddPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/services-add/services-add.module.ts","import {Component, OnInit} from '@angular/core';\nimport {AlertController, IonicPage, NavController, NavParams, ViewController} from 'ionic-angular';\nimport { ServiceServiceProvider } from \"../../providers/service-service/service-service\";\nimport { GlobalsServiceProvider } from \"../../providers/globals-service/globals-service\";\nimport { ServiceClass } from \"../../classes/service-class\";\nimport { AuthenticationServiceProvider } from \"../../providers/authentication-service/authentication-service\";\n\n\n/**\n * Generated class for the ServicesAddPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-services-add',\n  templateUrl: 'services-add.html',\n})\nexport class ServicesAddPage implements OnInit {\n\n  averageTime = 0;\n  loggedUser;\n  service: ServiceClass = new ServiceClass();\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              private authService: AuthenticationServiceProvider,\n              public viewCtrl: ViewController,\n              private alertCtrl: AlertController,\n              private serviceService: ServiceServiceProvider,\n              private globalService: GlobalsServiceProvider) {\n  }\n\n  ionViewCanEnter() {\n    return this.authService.isAuthenticated();\n  }\n\n  ngOnInit() {\n    this.loggedUser = this.globalService.getLoggedProffessionalData();\n    console.log('usuario:' + JSON.stringify(this.loggedUser));\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ServicesAddPage');\n  }\n\n\n  cancel() {\n    this.viewCtrl.dismiss();\n  }\n\n\n  save() {\n    console.log('Servicio a Salvar:' + JSON.stringify(this.service))\n    if(!this.service.name || !this.service.averageTime)\n    {\n      let theAlert = this.alertCtrl.create({\n        title: \"Campos incompletos\",\n        subTitle: \"Favor ingresar los datos obligatorios\",\n        buttons: ['OK']\n      });\n      theAlert.present();\n    } else{\n      this.viewCtrl.dismiss(this.service);\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/services-add/services-add.ts"],"sourceRoot":""}