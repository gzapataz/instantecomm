{"version":3,"sources":["../../src/pages/customer-add/customer-add-modal.module.ts","../../src/pages/customer-add/customer-add-modal.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CustomerAddModalPage } from './customer-add-modal';\nimport {ComponentsModule} from \"../../components/components.module\";\n\n@NgModule({\n  declarations: [\n    CustomerAddModalPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(CustomerAddModalPage),\n    ComponentsModule,\n  ],\n})\nexport class CustomerAddModalPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/customer-add/customer-add-modal.module.ts","import {Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  AlertController,\n  IonicPage,\n  ModalController,\n  NavController,\n  NavParams,\n  Platform,\n  ViewController\n} from 'ionic-angular';\nimport {Person} from \"../../classes/customer-class\";\nimport {LoggedProfessional} from \"../../classes/logged-class\";\nimport {CustomerAddServiceProvider} from \"../../providers/customer-add-service/customer-add-service\";\nimport {RestApiProvider} from '../../providers/countries-service/countries-service';\nimport {AlertmsgComponent} from \"../../components/alertmsg/alertmsg\";\n\n\n//import { Contacts, Contact, ContactField, ContactName } from '@ionic-native/contacts/ngx';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-customer-add-modal',\n  templateUrl: 'customer-add-modal.html',\n})\nexport class CustomerAddModalPage implements OnInit {\n  @ViewChild( AlertmsgComponent ) hijo: AlertmsgComponent;\n  persona = {\n    personName: {\n      firstName: '',\n      lastName: '',\n    },\n    //idType: null,\n    //birthdate: null,\n    //gender: null,\n    phone: '',\n    mobile: '',\n    email: '',\n    channels: 'WhatsApp',\n    //identification: null,\n    //address: null\n  }\n\n  codigo:string;\n\n  contactPref = [ {code: 'WhatsApp', name: 'WhatsApp'},\n                  {code:'Sms', name: 'Mensaje de Texto'},\n                  {code:'Email', name: 'eMail'}];\n\n  professional: LoggedProfessional;\n  contactsfound = []\n\n  channelWhatsApps = false\n\n  person: Person;\n  countries: any[];\n  errorMessage: string;\n  private alertm: any;\n\n\n  constructor(public navCtrl: NavController, private navParams: NavParams, public viewCtrl: ViewController,\n              private customerAddServiceProvider: CustomerAddServiceProvider,\n              private alertCtrl: AlertController, public rest: RestApiProvider,\n              private modalCtrl: ModalController,\n              private platform: Platform,\n              //private contacts: Contacts\n              ) {\n  }\n\n  ngOnInit() {\n    this.professional = this.navParams.get('professional');\n  //  console.log(this.professional);\n    this.getCountries();\n    this.codigo='57';\n/*\n    this.contacts.find([\"displayName\", \"phoneNumbers\"], {multiple: true}).then((contacts) => {\n      this.contactsfound = contacts;\n    })\n*/\n  }\n\n\n  cancel() {\n    this.viewCtrl.dismiss(this.person);\n  }\n\n\n  save() {\n\n    // @ts-ignore\n    // @ts-ignore\n    this.person = this.persona;\n    var subTitle;\n\n    //console.log(this.person);\n    console.log('this.person.personName.firstName' + this.person.personName.firstName);\n    console.log('this.person.personName.lastName' + this.person.personName.lastName);\n    console.log('this.person.mobile' + this.person.mobile);\n    console.log('this.person.email' + this.person.email);\n\n    if (!this.person.personName.firstName || !this.person.personName.lastName || !this.person.mobile || ( !this.person.email && this.person.channels == 'Email' )) {\n      if (!this.person.email && this.person.channels == 'Email') {\n        subTitle = 'El mail es obligatorio cuando se selecciona eMail en las notificaciones masivas'\n      }\n      else {\n        subTitle = 'Revise los datos incompletos: Nombre, Apellido, TelÃ©fono Celular '\n      }\n      let theAlert = this.alertCtrl.create({\n        title: \"Campos incompletos\",\n        subTitle: subTitle,\n        buttons: ['OK']\n      });\n      theAlert.present();\n    } else {\n\n      if (!this.person.phone) {\n        this.person.phone = \"00\";\n      }\n\n      this.person.mobile=this.codigo+this.persona.mobile;\n      this.person.address\n      this.customerAddServiceProvider.addACustomer(this.person, this.professional.userId).subscribe(data => {\n        console.log('Datos Salvados:' + JSON.stringify(data));\n        if (this.person.channels == 'WhatsApp') {\n          console.log('DATA APP:' + this.person.channels)\n          this.presentAlert(this.person, this.professional);\n        }\n        this.cancel();\n      });\n    }\n\n  }\n\n  async presentAlert(person, professional) {\n\n    var messageWA = 'Buenas+tardes+Sr%28a%29%3A+' + person.personName['lastName'] + '%2C+este+mensaje+es+enviado+desde+el+consultorio+del+%28la%29+Dr%28a%29%3A+' + this.professional.jsonProfessional['person']['personName']['firstName'] + '+' + this.professional.jsonProfessional['person']['personName']['lastName'] +   '.++Por+este+medio+le+recordaremos+oportunamente+sus+citas+y%2Fo+procedimientos+programados.++Con+el+fin+de+activar+el+servicio%2C+por+favor+presione+sobre+el+siguiente+texto+en+azul%3A+https%3A%2F%2Fapi.whatsapp.com%2Fsend%3Fphone%3D85296231044%26text%3DRecibido';\n    console.log('Alert-PERSON:' + JSON.stringify(person));\n    console.log('Alert-PROF:' + JSON.stringify(professional.jsonProfessional));\n    console.log('Alert-MSJ:' + messageWA);\n\n\n    const alert = await this.alertCtrl.create({\n      title: 'AutorizaciÃ³n WhatsApp',\n      message: '<div>' +\n        '<p class=\"c-no-margin\">Se ha seleccionado la opciÃ³n de WhatsApp para las notificaciones masivas.' +\n        'El paciente debe aceptar el envÃ­o de mensajes desde el nÃºmero del servidor de OdontApp. Es necesario enviar desde su WhatsApp ' +\n        'el mensaje con la autorizaciÃ³n. Una vez el paciente acepte, podrÃ¡ recibir mensajes automÃ¡ticos. Presione el siguiente botÃ³n: ' +\n        '<ion-buttons><button ion-button color=\"danger\" small><a href=https://wa.me/' + person.mobile + '?text=' + messageWA  + '>Enviar WhatsApp</a></button><ion-buttons></p>' +\n        '</div>',\n      /*message:  'Se ha seleccionado la opciÃ³n de WhatsApp para las notificaciones Masivas.' +\n                'El paciente debe aceptar el envÃ­o de mensajes desde el nÃºmero del servidor de OdontApp para eso es necesario enviar desde tu WhatsApp ' +\n                'el mensaje con la autorizaciÃ³n. Una vez el paciente acepte, podrÃ¡ recibir mensajes automÃ¡ticos ',*/\n      buttons: ['Cancelar', {text: 'Enviado', handler: () => {\n          console.log('hola')\n\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  onChangeTel(val) {\n    if (this.codigo == '57' && val.length != 10 || this.codigo != '57' && val.length < 9 ) {\n      let theAlert = this.alertCtrl.create({\n        title: \"DÃ­gitos del TelÃ©fono\",\n        subTitle: \"El telÃ©fono celular debe tener 10 dÃ­gitos\",\n        buttons: ['OK']\n      });\n      theAlert.present();\n    }\n\n\n    console.log('EVENTO' + JSON.stringify(val))\n  }\n\n  getCountries() {\n    let countryAux: string[];\n    this.rest.getCountries()\n      .subscribe(\n\n        countries => {   //console.log('Paises:' + JSON.stringify(countries));\n                              this.countries = countries\n                              console.log('this.countries :' + countryAux)\n                          },\n        error =>  this.errorMessage = <any>error);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/customer-add/customer-add-modal.ts"],"sourceRoot":""}